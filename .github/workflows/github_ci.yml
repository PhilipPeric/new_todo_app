name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:

#  pull_request:

jobs:
  analyze:
    name: Run analyzer and formatter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.2'
          cache: true
      - run: flutter pub get
      - run: flutter analyze
      - run: dart format --set-exit-if-changed .
  test:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.2'
          cache: true
      - run: flutter pub get
      - run: flutter test
        id: test
      - if: ${{ failure() && steps.test.conclusion == 'failure' }}
        name: 'Upload test failures'
        uses: actions/upload-artifact@v3
        with:
          name: test-failures
          path: test/failures
          retention-days: 5
  build:
    name: Run build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.2'
      - name: "Build the apk"
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: echo "$KEYSTORE_FILE_BASE64" | base64 -d > ./android/app/upload-keystore.jks && flutter pub get && flutter build apk -t lib/main_prod.dart  --flavor=prod
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-prod-release.apk
      - name: "Deploy artifact to Firebase App Distribution"
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID_ANDROID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: meastester
          file: build/app/outputs/flutter-apk/app-prod-release.apk